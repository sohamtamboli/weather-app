{"version":3,"sources":["components/Weather.jsx","assets/rain.webp","assets/clear.webp","assets/haze.webp","assets/fog.webp","assets/clouds.webp","assets/drizzle.webp","assets/mist.webp","assets/snow.webp","assets/sunny.webp","assets/thunderstorm.webp","assets/rain.jpg","assets/clear.jpg","assets/haze.jpg","assets/fog.jpg","assets/clouds.jpg","assets/drizzle.jpg","assets/mist.jpg","assets/snow.jpg","assets/sunny.jpg","assets/thunderstorm.jpg","assets/backgrounds.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherComponentWrapper","styled","div","Left","TopBar","GithubLink","a","MainContent","Right","InputWrapper","Input","input","Button","button","Hr","hr","DetailsWrapper","Title","h3","props","fs","fw","color","padding","ls","GuideText","h1","ContentWrapper","Temperature","LocationWrapper","WSubInfo","p","WeatherInfoWrapper","Icon","img","Wtype","DataList","ul","DataHolder","li","DataSpan","span","Weather","setChangeBackground","useState","city","setCity","weatherData","setWeatherData","arrayData","setArrayData","show","setShow","cod","setCod","useEffect","searchCity","e","key","console","log","fetch","res","json","weatherInfo","weather","main","fetchWeatherData","target","className","href","size","type","name","message","temp","toString","split","description","src","icon","alt","placeholder","value","onChange","onKeyDown","onClick","feels_like","temp_min","temp_max","pressure","humidity","backgrounds","Rain","rainbg","rainjpg","Clear","clearbg","clearjpg","Haze","hazebg","hazejpg","Fog","fogbg","fogjpg","Clouds","cloudsbg","cloudsjpg","Drizzle","drizzlebg","drizzlejpg","Mist","mistbg","mistjpg","Snow","snowbg","snowjpg","Sunny","sunnybg","sunnyjpg","Thunderstorm","thunderstormbg","thunderstormjpg","AppWrapper","url","App","changeBackground","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.369edaf2.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst WeatherComponentWrapper = styled.div`\n\tmin-height: 100vh;\n\twidth: 100%;\n\tdisplay: flex;\n`;\nconst Left = styled.div`\n\tflex: 0.7;\n\t/* background-color: red; */\n\tdisplay: flex;\n\tflex-direction: column;\n`;\nconst TopBar = styled.div`\n\tflex: 0.1;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tgap: 12px;\n\tpadding: 2rem 2rem 2rem 3rem;\n`;\nconst GithubLink = styled.a`\n\tdisplay: grid;\n\tplace-self: center;\n`;\nconst MainContent = styled.div`\n\tflex: 0.9;\n\tcolor: #fff;\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: flex-end;\n\tpadding: 0 0 6rem 6rem;\n`;\nconst Right = styled.div`\n\tflex: 0.3;\n\tpadding: 2rem;\n\tcolor: #fff;\n\tbackground: rgba(0, 0, 0, 0.5);\n\tbackdrop-filter: blur(12px);\n\t-webkit-backdrop-filter: blur(12px);\n`;\nconst InputWrapper = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: center;\n\tgap: 32px;\n`;\nconst Input = styled.input`\n\twidth: 100%;\n\tpadding: 0.8rem;\n\tfont-size: 1.2rem;\n\tfont-weight: 600;\n\tletter-spacing: 1px;\n\toutline: none;\n\tborder: none;\n\tbackground-color: transparent;\n\t/* border-top: 1px solid #fff; */\n\tborder-bottom: 1px solid #fff;\n\t/* border-left: 1px solid #fff; */\n\tcolor: #fff;\n\t:focus {\n\t\toutline: none;\n\t}\n\n\t::placeholder {\n\t\tcolor: #aaaaaa;\n\t}\n`;\nconst Button = styled.button`\n\tpadding: 0.8rem 1.2rem;\n\tfont-size: 1rem;\n`;\n\nconst Hr = styled.hr`\n\t/* width: 105%; */\n\t/* margin-left: -10px;\n\tmargin-top: 3rem;\n\tmargin-bottom: 3rem; */\n\twidth: 90%;\n\tmargin: 3rem auto;\n\tborder: none;\n\tborder-top: 1px solid #aaa;\n`;\nconst DetailsWrapper = styled.div``;\nconst Title = styled.h3`\n\tfont-size: ${(props) => props.fs || \"1rem\"};\n\tfont-weight: ${(props) => props.fw || 400};\n\tcolor: ${(props) => props.color || \"#fff\"};\n\tmargin: 0;\n\tpadding: ${(props) => props.padding};\n\tletter-spacing: ${(props) => props.ls};\n`;\nconst GuideText = styled.h1`\n\tmargin: 0;\n\tfont-size: 5rem;\n\tpadding: 3rem;\n`;\nconst ContentWrapper = styled.div`\n\tmargin: 1rem;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 16px;\n`;\nconst Temperature = styled.h1`\n\tfont-size: 7rem;\n\tfont-weight: 800;\n`;\nconst LocationWrapper = styled.div``;\n// const DateTime = styled.p`\n// \tmargin: 0;\n// `;\nconst WSubInfo = styled.p`\n\tmargin: 0;\n`;\nconst WeatherInfoWrapper = styled.div``;\nconst Icon = styled.img``;\nconst Wtype = styled.p`\n\tmargin: 0;\n`;\nconst DataList = styled.ul`\n\tmargin: 2.5rem 0;\n`;\nconst DataHolder = styled.li`\n\tlist-style: none;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 1rem 0;\n\tcolor: #aaa;\n`;\nconst DataSpan = styled.span`\n\tfont-size: 1rem;\n\tfont-weight: 500;\n\tcolor: #aaa;\n`;\n\nconst Weather = ({ setChangeBackground }) => {\n\tconst [city, setCity] = useState();\n\tconst [weatherData, setWeatherData] = useState({});\n\tconst [arrayData, setArrayData] = useState([]);\n\tconst [show, setShow] = useState(false);\n\tconst [cod, setCod] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetShow(true);\n\t}, []);\n\n\tconst getCity = (e) => {\n\t\tsetCity(e.target.value);\n\t};\n\n\tconst searchCity = (e) => {\n\t\tif (e.key === \"Enter\") {\n\t\t\tconsole.log(city);\n\n\t\t\tconst fetchWeatherData = async () => {\n\t\t\t\tconst res = await fetch(\n\t\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=b1fb91a0f456e84a7667c0a94073fc9e`\n\t\t\t\t);\n\t\t\t\tconst weatherInfo = await res.json();\n\t\t\t\tconsole.log(\"Data\", weatherInfo);\n\t\t\t\tif (weatherInfo.cod === 200) {\n\t\t\t\t\tsetWeatherData(weatherInfo);\n\t\t\t\t\tsetArrayData(weatherInfo.weather[0]);\n\t\t\t\t\tsetChangeBackground(weatherInfo.weather[0].main);\n\t\t\t\t\tsetCod(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetWeatherData(weatherInfo);\n\t\t\t\t\tsetCod(true);\n\t\t\t\t}\n\t\t\t};\n\t\t\tfetchWeatherData();\n\t\t\tconsole.log(\"out of func\", weatherData);\n\t\t\tsetCity();\n\t\t\tsetShow(false);\n\t\t}\n\t};\n\n\t// TRIED TO GET SEARCHED QUERIES DATE AND TIME But ITS A BIT COMPLICATED FOR SIMPLE PROJECT LIKE THIS\n\t// function getCurrentDate() {\n\t// \t// let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t// \tlet options = {\n\t// \t\tweekday: \"long\",\n\t// \t\tyear: \"numeric\",\n\t// \t\tmonth: \"long\",\n\t// \t\tday: \"numeric\",\n\t// \t\thour: \"2-digit\",\n\t// \t\tminute: \"2-digit\",\n\t// \t\thour12: true,\n\t// \t};\n\n\t// \t// return new Date().toLocaleString(\"en-GB\", { timezone: timezone });\n\t// \treturn new Date().toLocaleTimeString([], options);\n\t// }\n\n\treturn (\n\t\t<WeatherComponentWrapper>\n\t\t\t<Left>\n\t\t\t\t<TopBar>\n\t\t\t\t\t<Title fs='1.3rem' fw='700'>\n\t\t\t\t\t\tthe.weather\n\t\t\t\t\t</Title>\n\t\t\t\t\t<GithubLink\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\tclassName='github-link'\n\t\t\t\t\t\thref='https://github.com/sohamtamboli/ReactJs'>\n\t\t\t\t\t\t<box-icon\n\t\t\t\t\t\t\tsize='sm'\n\t\t\t\t\t\t\tcolor='#fff'\n\t\t\t\t\t\t\ttype='logo'\n\t\t\t\t\t\t\tname='github'></box-icon>\n\t\t\t\t\t</GithubLink>\n\t\t\t\t</TopBar>\n\t\t\t\t<MainContent>\n\t\t\t\t\t{show ? (\n\t\t\t\t\t\t<GuideText>Type City</GuideText>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{cod ? (\n\t\t\t\t\t\t\t\t<GuideText> {weatherData?.message} </GuideText>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<ContentWrapper>\n\t\t\t\t\t\t\t\t\t\t<Temperature>\n\t\t\t\t\t\t\t\t\t\t\t{weatherData?.main?.temp?.toString().split(\".\")[0]}°\n\t\t\t\t\t\t\t\t\t\t</Temperature>\n\t\t\t\t\t\t\t\t\t\t<LocationWrapper>\n\t\t\t\t\t\t\t\t\t\t\t<Title fs='4rem' ls='1px' fw='700'>\n\t\t\t\t\t\t\t\t\t\t\t\t{weatherData?.name}\n\t\t\t\t\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t\t\t\t\t{/* <DateTime></DateTime> */}\n\t\t\t\t\t\t\t\t\t\t\t<WSubInfo>{arrayData?.description}</WSubInfo>\n\t\t\t\t\t\t\t\t\t\t</LocationWrapper>\n\t\t\t\t\t\t\t\t\t\t<WeatherInfoWrapper>\n\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/w/${arrayData?.icon}.png`}\n\t\t\t\t\t\t\t\t\t\t\t\talt='icon'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Wtype>{arrayData?.main}</Wtype>\n\t\t\t\t\t\t\t\t\t\t</WeatherInfoWrapper>\n\t\t\t\t\t\t\t\t\t</ContentWrapper>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</MainContent>\n\t\t\t</Left>\n\t\t\t<Right>\n\t\t\t\t<InputWrapper>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Type City Name'\n\t\t\t\t\t\tvalue={city || \"\"}\n\t\t\t\t\t\tonChange={getCity}\n\t\t\t\t\t\tonKeyDown={searchCity}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button onClick={searchCity}>Search</Button>\n\t\t\t\t</InputWrapper>\n\t\t\t\t<Hr />\n\t\t\t\t<DetailsWrapper>\n\t\t\t\t\t<Title fs='1.2rem' fw='400'>\n\t\t\t\t\t\tWeather Details {` of ${weatherData.name || \"Searched City\"}`}\n\t\t\t\t\t</Title>\n\t\t\t\t\t<DataList>\n\t\t\t\t\t\t<DataHolder>\n\t\t\t\t\t\t\t<Title color='#aaa' fs='1rem' fw='600'>\n\t\t\t\t\t\t\t\tRecorded Temperature\n\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t<DataSpan>{weatherData?.main?.temp} °C</DataSpan>\n\t\t\t\t\t\t</DataHolder>\n\t\t\t\t\t\t<DataHolder>\n\t\t\t\t\t\t\t<Title color='#aaa' fs='1rem' fw='600'>\n\t\t\t\t\t\t\t\tWhat it feels like\n\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t<DataSpan>{weatherData?.main?.feels_like} °C</DataSpan>\n\t\t\t\t\t\t</DataHolder>\n\t\t\t\t\t\t<DataHolder>\n\t\t\t\t\t\t\t<Title color='#aaa' fs='1rem' fw='600'>\n\t\t\t\t\t\t\t\tMinimum Temperature\n\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t<DataSpan>{weatherData?.main?.temp_min} °C</DataSpan>\n\t\t\t\t\t\t</DataHolder>\n\t\t\t\t\t\t<DataHolder>\n\t\t\t\t\t\t\t<Title color='#aaa' fs='1rem' fw='600'>\n\t\t\t\t\t\t\t\tMaximum Temperature\n\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t<DataSpan>{weatherData?.main?.temp_max} °C</DataSpan>\n\t\t\t\t\t\t</DataHolder>\n\t\t\t\t\t\t<DataHolder>\n\t\t\t\t\t\t\t<Title color='#aaa' fs='1rem' fw='600'>\n\t\t\t\t\t\t\t\tRecorded Pressure\n\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t<DataSpan>{weatherData?.main?.pressure}</DataSpan>\n\t\t\t\t\t\t</DataHolder>\n\n\t\t\t\t\t\t<DataHolder>\n\t\t\t\t\t\t\t<Title color='#aaa' fs='1rem' fw='600'>\n\t\t\t\t\t\t\t\tRecorded Humidity\n\t\t\t\t\t\t\t</Title>\n\t\t\t\t\t\t\t<DataSpan>{weatherData?.main?.humidity}</DataSpan>\n\t\t\t\t\t\t</DataHolder>\n\t\t\t\t\t</DataList>\n\t\t\t\t</DetailsWrapper>\n\t\t\t</Right>\n\t\t</WeatherComponentWrapper>\n\t);\n};\n\nexport default Weather;\n","export default __webpack_public_path__ + \"static/media/rain.2e46f7f8.webp\";","export default __webpack_public_path__ + \"static/media/clear.478636a3.webp\";","export default __webpack_public_path__ + \"static/media/haze.33a82d41.webp\";","export default __webpack_public_path__ + \"static/media/fog.80978670.webp\";","export default __webpack_public_path__ + \"static/media/clouds.d33c984c.webp\";","export default __webpack_public_path__ + \"static/media/drizzle.79314972.webp\";","export default __webpack_public_path__ + \"static/media/mist.b1a87ac3.webp\";","export default __webpack_public_path__ + \"static/media/snow.2222aa72.webp\";","export default __webpack_public_path__ + \"static/media/sunny.02e2002c.webp\";","export default __webpack_public_path__ + \"static/media/thunderstorm.e21f015b.webp\";","export default __webpack_public_path__ + \"static/media/rain.4e942c9b.jpg\";","export default __webpack_public_path__ + \"static/media/clear.894fbe63.jpg\";","export default __webpack_public_path__ + \"static/media/haze.ce56be8c.jpg\";","export default __webpack_public_path__ + \"static/media/fog.b3ef46f7.jpg\";","export default __webpack_public_path__ + \"static/media/clouds.cd7d61c3.jpg\";","export default __webpack_public_path__ + \"static/media/drizzle.cb5d6f1c.jpg\";","export default __webpack_public_path__ + \"static/media/mist.3388c490.jpg\";","export default __webpack_public_path__ + \"static/media/snow.45437293.jpg\";","export default __webpack_public_path__ + \"static/media/sunny.2d868bf6.jpg\";","export default __webpack_public_path__ + \"static/media/thunderstorm.13f18b41.jpg\";","import rainbg from \"./rain.webp\";\nimport clearbg from \"./clear.webp\";\nimport hazebg from \"./haze.webp\";\nimport fogbg from \"./fog.webp\";\nimport cloudsbg from \"./clouds.webp\";\nimport drizzlebg from \"./drizzle.webp\";\nimport mistbg from \"./mist.webp\";\nimport snowbg from \"./snow.webp\";\nimport sunnybg from \"./sunny.webp\";\nimport thunderstormbg from \"./thunderstorm.webp\";\n// -----------------------------------------------------\nimport rainjpg from \"./rain.jpg\";\nimport clearjpg from \"./clear.jpg\";\nimport hazejpg from \"./haze.jpg\";\nimport fogjpg from \"./fog.jpg\";\nimport cloudsjpg from \"./clouds.jpg\";\nimport drizzlejpg from \"./drizzle.jpg\";\nimport mistjpg from \"./mist.jpg\";\nimport snowjpg from \"./snow.jpg\";\nimport sunnyjpg from \"./sunny.jpg\";\nimport thunderstormjpg from \"./thunderstorm.jpg\";\n\nexport const backgrounds = {\n\tRain: rainbg || rainjpg,\n\tClear: clearbg || clearjpg,\n\tHaze: hazebg || hazejpg,\n\tFog: fogbg || fogjpg,\n\tClouds: cloudsbg || cloudsjpg,\n\tDrizzle: drizzlebg || drizzlejpg,\n\tMist: mistbg || mistjpg,\n\tSnow: snowbg || snowjpg,\n\tSunny: sunnybg || sunnyjpg,\n\tThunderstorm: thunderstormbg || thunderstormjpg,\n};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n// import Wapp from \"./components/Wapp\";\n// import \"./App.css\";\n\nimport Weather from \"./components/Weather\";\nimport { backgrounds } from \"./assets/backgrounds\";\n\nconst AppWrapper = styled.div`\n\tmin-height: 100vh;\n\tbackground: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)),\n\t\turl(${(props) => backgrounds[props.url]});\n\tbackground-image: image-set(url(${(props) => backgrounds[props.url]}));\n\tbackground-size: cover;\n\tbackground-repeat: no-repeat;\n`;\n\nfunction App() {\n\tconst [changeBackground, setChangeBackground] = useState();\n\n\tuseEffect(() => {\n\t\tsetChangeBackground(\"Rain\");\n\t}, []);\n\t// console.log(backgrounds[\"clouds\"]);\n\tconsole.log(changeBackground);\n\treturn (\n\t\t//  <Wapp />\n\t\t<AppWrapper url={changeBackground}>\n\t\t\t<Weather setChangeBackground={setChangeBackground} />\n\t\t</AppWrapper>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}